<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <mvc:annotation-driven>
    	<mvc:message-converters register-defaults="true">  
        <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->  
        <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
            <constructor-arg value="UTF-8" />  
            <property name="supportedMediaTypes">
            	<list>
                   <bean class="org.springframework.http.MediaType">
                       <constructor-arg index="0" value="text"/>
                       <constructor-arg index="1" value="plain"/>
                       <constructor-arg index="2" value="UTF-8"/>
                   </bean>
                   <bean class="org.springframework.http.MediaType">
                       <constructor-arg index="0" value="*"/>
                       <constructor-arg index="1" value="*"/>
                       <constructor-arg index="2" value="UTF-8"/>
                   </bean>
               </list>
            </property>  
        </bean>  
        <!-- 将Jackson2HttpMessageConverter的默认格式化输出设为true -->  
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
            <property name="prettyPrint" value="true" />  
            <property name="supportedMediaTypes">
            	<list>
                    <value>text/html;charset=UTF-8</value>
                    <value>application/json;charset=UTF-8</value>
                </list>
            </property>
            <!--解决日期全局处理相差8个小时的问题  -->
            <property name="objectMapper">  
                <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                    <!-- 处理responseBody 里面日期类型 -->  
                    <property name="dateFormat">  
                        <bean class="java.text.SimpleDateFormat">  
                            <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                        </bean>  
                    </property>  
                    <!-- 时区指定 -->  
                    <property name="timeZone" value="GMT+8" />  
                    <!-- 为null字段时不显示 -->  
                    <property name="serializationInclusion">  
                        <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>  
                    </property>  
                </bean>  
            </property>  
        </bean>  
        <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"
              id="fastJsonHttpMessageConverter">
            <property name="supportedMediaTypes">
                <list>
                    <value>application/json;charset=UTF-8</value>
                </list>
            </property>
        </bean>
    </mvc:message-converters>
    
    </mvc:annotation-driven>
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
    <mvc:default-servlet-handler/>
	<context:annotation-config/>

	<!-- swagger api静态资源匹配 -->
	<mvc:resources mapping="/swagger/**" location="/swagger/" />


    <context:component-scan base-package="com.cn.vanke">
        <context:include-filter type="annotation"  expression="org.springframework.web.bind.annotation.RestController"/>
    </context:component-scan>
    
    <!-- 视图解析模版 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/WEB-INF/view/" p:suffix=".jsp" p:viewClass="org.springframework.web.servlet.view.JstlView"/>
	<!-- 定义无需Controller的url<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/index" />
	<!-- 全局异常处理 -->
    <bean class="com.cn.vanke.common.GlobalExceptionResolver"/>
	<!-- hibernate validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	
	
	<!--增加对上传文件的支持 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 上传文件大小(字节) 100*1024*1024 -->
		<property name="maxUploadSize" value="104857600"></property>
		<property name="maxInMemorySize" value="40960"></property>
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>
	
	<!-- SpringMvc提供的RestTemplate,可以模拟rest风格的Client方式调用接口，类似于Webservice -->
	<bean id="simpleClientHttpRequestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">
        <property name="readTimeout" value="60000"/>
        <property name="connectTimeout" value="10000"/>
    </bean>

    <bean class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="simpleClientHttpRequestFactory"/>
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                	<property name="supportedMediaTypes">
			            <list>
			                <value>application/json;charset=UTF-8</value>
			                <value>text/json;charset=UTF-8</value>
			            </list>
			        </property>
                </bean>
            </list>
        </property>
    </bean>
    <!-- <import resource="dataSource.xml"/> -->
    <import resource="applicationContext-transaction.xml"/>
</beans>
